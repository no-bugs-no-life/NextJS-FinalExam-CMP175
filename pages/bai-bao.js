import React, { useState, useEffect } from "react";

export default function BaiBao() {
    const defaultArticles = [
        {
            id: 1,
            title: "M√°y bay M·ªπ g·∫∑p s·ª± c·ªë, ƒë√°nh r∆°i bia m·ª•c ti√™u xu·ªëng nh√† d√¢n",
            image: "img/maybay.jpg",
            category: "H√†ng Kh√¥ng",
            description: "M√°y bay c·ªßa t·∫≠p ƒëo√†n qu√¢n s·ª± t∆∞ nh√¢n M·ªπ ƒë√°nh r∆°i bia m·ª•c ti√™u xu·ªëng ng√¥i nh√† ·ªü t√¢y nam n∆∞·ªõc Anh khi ƒëang h·∫° c√°nh kh·∫©n c·∫•p.",
            color: "bg-red-500",
            buttonText: "‚ù§Ô∏è Y√™u th√≠ch",
            isDefault: true,
        },
        {
            id: 2,
            title: "Ukraine c√°o bu·ªôc Nga t·∫≠p k√≠ch b·ªánh vi·ªán qu√¢n y ·ªü Kharkov",
            image: "img/nga.jpg",
            category: "Chi·∫øn Tranh - Ch√≠nh Tr·ªã",
            description: "Kiev c√°o bu·ªôc Moskva t·∫≠p k√≠ch b·∫±ng m√°y bay kh√¥ng ng∆∞·ªùi l√°i nh·∫±m v√†o b·ªánh vi·ªán qu√¢n y ·ªü Kharkov, khi·∫øn binh sƒ© Ukraine b·ªã th∆∞∆°ng.",
            color: "bg-red-500",
            buttonText: "‚ù§Ô∏è Y√™u th√≠ch",
            isDefault: true,
        },
        {
            id: 3,
            title: "C·∫ßu th·ªß xu·∫•t s·∫Øc nh·∫•t nƒÉm c·ªßa FIFA g·ªçi t√™n Mbappe",
            image: "img/mbappe.jpg",
            category: "Th·ªÉ thao",
            description: "Mbappe ƒë∆∞·ª£c vinh danh l√† c·∫ßu th·ªß xu·∫•t s·∫Øc nh·∫•t nƒÉm c·ªßa FIFA nh·ªù th√†nh t√≠ch ·∫•n t∆∞·ª£ng.",
            color: "bg-red-500",
            buttonText: "‚ù§Ô∏è Y√™u th√≠ch",
            isDefault: true,
        },
        {
            id: 4,
            category: "C√¥ng Ngh·ªá",
            img: "img/dinhchi.jpg",
            title: "Nam sinh d√πng AI qua m·∫∑t lo·∫°t c√¥ng ty c√¥ng ngh·ªá b·ªã ƒë√¨nh ch·ªâ h·ªçc",
            content: "M·ªπ - ƒê·∫°i h·ªçc Columbia ƒë√¨nh ch·ªâ h·ªçc m·ªôt nƒÉm v·ªõi Chungin \"Roy\" Lee, ng∆∞·ªùi t·∫°o ra c√¥ng c·ª• AI ƒë·ªÉ gian l·∫≠n ·ªü v√≤ng ph·ªèng v·∫•n c·ªßa c√°c c√¥ng ty c√¥ng ngh·ªá",
            color: "yellow",
            isDefault: true,
        },
        {
            id: 5,
            category: "Ch·ª©ng Kho√°n",
            img: "img/kinhte.jpg",
            title: "'C√° m·∫≠p' PYN Elite Fund: C·ªï phi·∫øu c√¥ng ngh·ªá ƒëang ƒë∆∞·ª£c ƒë·ªãnh gi√° cao",
            content: "Qu·ªπ ngo·∫°i PYN Elite Fund ch·ªët l·ªùi c·ªï phi·∫øu c√¥ng ngh·ªá nh∆∞ FPT v√† CMG v√¨ c√≥ gi√° cao v√† c·∫£nh b√°o th·ªã tr∆∞·ªùng v·ªÅ r·ªßi ro bong b√≥ng dotcom.",
            color: "purple",
            isDefault: true,
        },
        {
            id: 6,
            category: "Podcasts",
            img: "img/chualanh.jpg",
            title: "Nhi·ªÅu ng∆∞·ªùi tr·∫ª t·ªè ra b·∫≠n r·ªôn v√¨ √°p l·ª±c sa th·∫£i",
            content: "G√µ b√†n ph√≠m th·∫≠t to, li√™n t·ª•c ch·∫°y ra h√†nh lang nghe ƒëi·ªán tho·∫°i d√π ƒë·∫ßu d√¢y kia kh√¥ng c√≥ ai...",
            color: "red",
            isDefault: true,
        },
        {
            id: 7,
            category: "Podcasts",
            img: "img/tho.jpg",
            title: "Ng·ªôt ng·∫°t v·ªõi m√¥i tr∆∞·ªùng l√†m vi·ªác ƒë·∫øn 'kh√≥ th·ªü'",
            content: "Sau 7 th√°ng nh·∫£y vi·ªác, t√¥i ch∆∞a th·ªÉ l√†m quen ƒë∆∞·ª£c v·ªõi m√¥i tr∆∞·ªùng m·ªõi...",
            color: "blue",
            isDefault: true,
        }
    ];

    const [articles, setArticles] = useState(defaultArticles);
    const [favorites, setFavorites] = useState([]);
    const [editArticle, setEditArticle] = useState(null);
    const [newArticle, setNewArticle] = useState({
        title: "",
        image: "",
        category: "",
        description: "",
    });

    useEffect(() => {
        const storedArticles = JSON.parse(localStorage.getItem("articles")) || [];
        setArticles([...defaultArticles, ...storedArticles]);
        const storedFavorites = JSON.parse(localStorage.getItem("favorites")) || [];
        setFavorites(storedFavorites);
    }, []);


    const toggleFavorite = (article) => {
        const isFavorite = favorites.some((fav) => fav.id === article.id);
        let updatedFavorites;

        if (isFavorite) {
            const confirmDelete = window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b√†i b√°o n√†y kh·ªèi danh s√°ch y√™u th√≠ch?");
            if (confirmDelete) {
                updatedFavorites = favorites.filter((fav) => fav.id !== article.id);
                alert("B√†i b√°o ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi danh s√°ch y√™u th√≠ch!");
            } else {
                return; // N·∫øu ng∆∞·ªùi d√πng h·ªßy, kh√¥ng l√†m g√¨ c·∫£
            }
        } else {
            updatedFavorites = [...favorites, article];
            alert(`B√†i b√°o "${article.title}" ƒë√£ ƒë∆∞·ª£c th√™m v√†o danh s√°ch y√™u th√≠ch!`);
        }

        setFavorites(updatedFavorites);
        localStorage.setItem("favorites", JSON.stringify(updatedFavorites));

        setArticles(
            articles.map((a) =>
                a.id === article.id
                    ? { ...a, buttonText: isFavorite ? "‚ù§Ô∏è Y√™u th√≠ch" : "üíî B·ªè th√≠ch" }
                    : a
            )
        );
    };

    const handleRemoveArticle = (id) => {
        const confirmDelete = window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b√†i b√°o n√†y?");
        if (confirmDelete) {
            const updatedArticles = articles.filter((article) => article.id !== id);
            setArticles(updatedArticles);
            localStorage.setItem(
                "articles",
                JSON.stringify(updatedArticles.filter((article) => !article.isDefault))
            );
        }
    };

    const handleEditArticle = (article) => {
        if (!article.isDefault) {
            window.location.href = `/updatenews?id=${article.id}`;
        } else {
            alert("B·∫°n kh√¥ng th·ªÉ ch·ªânh s·ª≠a b√†i b√°o m·∫∑c ƒë·ªãnh!");
        }
    };

    const handleUpdateArticle = () => {
        const updatedArticles = articles.map((article) =>
            article.id === editArticle.id ? { ...editArticle, ...newArticle } : article
        );
        setArticles(updatedArticles);
        localStorage.setItem(
            "articles",
            JSON.stringify(updatedArticles.filter((article) => !article.isDefault))
        );
        setEditArticle(null);
        setNewArticle({ title: "", image: "", category: "", description: "" });
    };

    return (
        <div className="px-6 py-8">

            <h1 className="text-3xl font-bold">Danh S√°ch B√†i B√°o</h1>

            <div
                className="add-article-btn bg-blue-500 text-white px-4 py-2 rounded mt-6 cursor-pointer block"
                onClick={() => (window.location.href = "/addnews")}
                style={{ width: '7%' }}
            >
                Th√™m B√†i B√°o
            </div>

            <button
                className="px-6 py-3 bg-yellow-500 text-white rounded hover:bg-yellow-600 mt-4 block"
                onClick={() => (window.location.href = "/likenews")}
                style={{ width: '7%' }}
            >
                Y√™u Th√≠ch
            </button>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-6">
                {articles.map((article) => (
                    <div key={article.id} className="bg-white p-4 shadow-lg rounded-lg">
                        <img src={article.image} alt={article.title} className="w-full h-40 object-cover rounded" />
                        <h3 className="text-xl font-semibold mt-4">{article.title}</h3>
                        <p className="text-sm text-gray-500">{article.category}</p>
                        <p className="mt-2 text-gray-700">{article.description}</p>
                        <button
                            className={`mt-4 px-6 py-3 ${article.color} text-white rounded hover:opacity-75 text-xl block w-full`}
                            onClick={() => toggleFavorite(article)}
                            style={{ width: '25%' }}

                        >
                            {favorites.some((fav) => fav.id === article.id) ? "üíî B·ªè th√≠ch" : "‚ù§Ô∏è Y√™u th√≠ch"}
                        </button>
                        {!article.isDefault && (
                            <>
                                <button
                                    className="mt-4 px-6 py-3 bg-red-500 text-white rounded hover:opacity-75 text-xl block w-full"
                                    onClick={() => handleRemoveArticle(article.id)}
                                    style={{ width: '25%' }}
                                >
                                    X√≥a
                                </button>
                                <button
                                    className="mt-4 px-6 py-3 bg-blue-500 text-white rounded hover:opacity-75 text-xl block w-full"
                                    onClick={() => handleEditArticle(article)}
                                    style={{ width: '25%' }}
                                >
                                    S·ª≠a
                                </button>
                            </>
                        )}
                    </div>
                ))}
            </div>
            {editArticle && (
                <div className="mt-8 p-4 bg-gray-100 rounded-lg">
                    <h2 className="text-2xl font-bold mb-4">Ch·ªânh S·ª≠a B√†i B√°o</h2>
                    <form>
                        <input
                            type="text"
                            name="title"
                            placeholder="Ti√™u ƒë·ªÅ"
                            value={newArticle.title}
                            onChange={(e) => setNewArticle({ ...newArticle, title: e.target.value })}
                            className="p-2 mb-2 w-full border border-gray-300 rounded"
                        />
                        <input
                            type="text"
                            name="image"
                            placeholder="URL ·∫£nh"
                            value={newArticle.image}
                            onChange={(e) => setNewArticle({ ...newArticle, image: e.target.value })}
                            className="p-2 mb-2 w-full border border-gray-300 rounded"
                        />
                        <input
                            type="text"
                            name="category"
                            placeholder="Danh m·ª•c"
                            value={newArticle.category}
                            onChange={(e) => setNewArticle({ ...newArticle, category: e.target.value })}
                            className="p-2 mb-2 w-full border border-gray-300 rounded"
                        />
                        <textarea
                            name="description"
                            placeholder="M√¥ t·∫£"
                            value={newArticle.description}
                            onChange={(e) => setNewArticle({ ...newArticle, description: e.target.value })}
                            className="p-2 mb-2 w-full border border-gray-300 rounded"
                        />
                        <button
                            type="button"
                            onClick={handleUpdateArticle}
                            className="px-6 py-3 bg-yellow-500 text-white rounded hover:bg-yellow-600"
                        >
                            C·∫≠p nh·∫≠t
                        </button>
                    </form>
                </div>
            )}
        </div>
    );
}